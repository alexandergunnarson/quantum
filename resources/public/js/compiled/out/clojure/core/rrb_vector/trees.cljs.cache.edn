;; Analyzed by ClojureScript 0.0-3269
{:use-macros nil, :excludes #{push-tail new-path do-assoc pop-tail array-for}, :name clojure.core.rrb-vector.trees, :imports nil, :requires {clojure.core.rrb-vector.nodes clojure.core.rrb-vector.nodes}, :uses {ranges clojure.core.rrb-vector.nodes, regular? clojure.core.rrb-vector.nodes, last-range clojure.core.rrb-vector.nodes, clone clojure.core.rrb-vector.nodes}, :defs {tail-offset {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/trees.cljs", :line 6, :column 7, :end-line 6, :end-column 18, :arglists (quote ([cnt tail]))}, :name clojure.core.rrb-vector.trees/tail-offset, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/trees.cljs", :end-column 18, :method-params ([cnt tail]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cnt tail]))}, array-for {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/trees.cljs", :line 9, :column 7, :end-line 9, :end-column 16, :arglists (quote ([cnt shift root tail i]))}, :name clojure.core.rrb-vector.trees/array-for, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/trees.cljs", :end-column 16, :method-params ([cnt shift root tail i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 5, :fn-var true, :arglists (quote ([cnt shift root tail i]))}, new-path {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/trees.cljs", :line 38, :column 7, :end-line 38, :end-column 15, :arglists (quote ([tail edit shift current-node]))}, :name clojure.core.rrb-vector.trees/new-path, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/trees.cljs", :end-column 15, :method-params ([tail edit shift current-node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 4, :fn-var true, :arglists (quote ([tail edit shift current-node]))}, push-tail {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/trees.cljs", :line 59, :column 7, :end-line 59, :end-column 16, :arglists (quote ([shift cnt root-edit current-node tail-node]))}, :name clojure.core.rrb-vector.trees/push-tail, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/trees.cljs", :end-column 16, :method-params ([shift cnt root-edit current-node tail-node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 5, :fn-var true, :arglists (quote ([shift cnt root-edit current-node tail-node]))}, pop-tail {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/trees.cljs", :line 106, :column 7, :end-line 106, :end-column 15, :arglists (quote ([shift cnt root-edit current-node]))}, :name clojure.core.rrb-vector.trees/pop-tail, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/trees.cljs", :end-column 15, :method-params ([shift cnt root-edit current-node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 4, :fn-var true, :arglists (quote ([shift cnt root-edit current-node]))}, do-assoc {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/trees.cljs", :line 178, :column 7, :end-line 178, :end-column 15, :arglists (quote ([shift current-node i val]))}, :name clojure.core.rrb-vector.trees/do-assoc, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/trees.cljs", :end-column 15, :method-params ([shift current-node i val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 4, :fn-var true, :arglists (quote ([shift current-node i val]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc nil}