;; Analyzed by ClojureScript 0.0-3269
{:name clojure.core.rrb-vector.nodes, :doc nil, :excludes #{clone}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {ranges {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 16, :column 7, :end-line 16, :end-column 13, :arglists (quote ([node]))}, :name clojure.core.rrb-vector.nodes/ranges, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :end-column 13, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, regular? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 11, :column 7, :end-line 11, :end-column 15, :arglists (quote ([node]))}, :name clojure.core.rrb-vector.nodes/regular?, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :end-column 15, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, remove-leftmost-child {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 88, :column 7, :end-line 88, :end-column 28, :arglists (quote ([shift parent]))}, :name clojure.core.rrb-vector.nodes/remove-leftmost-child, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :end-column 28, :method-params ([shift parent]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 2, :fn-var true, :arglists (quote ([shift parent]))}, last-range {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 19, :column 7, :end-line 19, :end-column 17, :arglists (quote ([node]))}, :name clojure.core.rrb-vector.nodes/last-range, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :end-column 17, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, first-child {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 79, :column 7, :end-line 79, :end-column 18, :arglists (quote ([node]))}, :name clojure.core.rrb-vector.nodes/first-child, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :end-column 18, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, new-path* {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 176, :column 7, :end-line 176, :end-column 16, :arglists (quote ([shift node]))}, :name clojure.core.rrb-vector.nodes/new-path*, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :end-column 16, :method-params ([shift node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 2, :fn-var true, :arglists (quote ([shift node]))}, regular-ranges {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 24, :column 7, :end-line 24, :end-column 21, :arglists (quote ([shift cnt]))}, :name clojure.core.rrb-vector.nodes/regular-ranges, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :end-column 21, :method-params ([shift cnt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([shift cnt]))}, fold-tail {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 198, :column 7, :end-line 198, :end-column 16, :arglists (quote ([node shift cnt tail]))}, :name clojure.core.rrb-vector.nodes/fold-tail, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :end-column 16, :method-params ([node shift cnt tail]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 4, :fn-var true, :arglists (quote ([node shift cnt tail]))}, index-of-nil {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 64, :column 7, :end-line 64, :end-column 19, :arglists (quote ([arr]))}, :name clojure.core.rrb-vector.nodes/index-of-nil, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :end-column 19, :method-params ([arr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arr]))}, overflow? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 37, :column 7, :end-line 37, :end-column 16, :arglists (quote ([root shift cnt]))}, :name clojure.core.rrb-vector.nodes/overflow?, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :end-column 16, :method-params ([root shift cnt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 3, :fn-var true, :arglists (quote ([root shift cnt]))}, empty-node {:name clojure.core.rrb-vector.nodes/empty-node, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 6, :column 1, :end-line 6, :end-column 16, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 6, :column 6, :end-line 6, :end-column 16}}, replace-leftmost-child {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 110, :column 7, :end-line 110, :end-column 29, :arglists (quote ([shift parent pcnt child d]))}, :name clojure.core.rrb-vector.nodes/replace-leftmost-child, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :end-column 29, :method-params ([shift parent pcnt child d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 5, :fn-var true, :arglists (quote ([shift parent pcnt child d]))}, clone {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 8, :column 7, :end-line 8, :end-column 12, :arglists (quote ([shift node]))}, :name clojure.core.rrb-vector.nodes/clone, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :end-column 12, :method-params ([shift node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([shift node]))}, last-child {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 82, :column 7, :end-line 82, :end-column 17, :arglists (quote ([node]))}, :name clojure.core.rrb-vector.nodes/last-child, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :end-column 17, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, index-of-0 {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 51, :column 7, :end-line 51, :end-column 17, :arglists (quote ([arr]))}, :name clojure.core.rrb-vector.nodes/index-of-0, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :end-column 17, :method-params ([arr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arr]))}, replace-rightmost-child {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :line 143, :column 7, :end-line 143, :end-column 30, :arglists (quote ([shift parent child d]))}, :name clojure.core.rrb-vector.nodes/replace-rightmost-child, :variadic false, :file "resources/public/js/compiled/out/clojure/core/rrb_vector/nodes.cljs", :end-column 30, :method-params ([shift parent child d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 4, :fn-var true, :arglists (quote ([shift parent child d]))}}}