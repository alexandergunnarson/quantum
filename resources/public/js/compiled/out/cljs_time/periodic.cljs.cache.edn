;; Analyzed by ClojureScript 0.0-3269
{:name cljs-time.periodic, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {ct cljs-time.core, cljs-time.core cljs-time.core, internal cljs-time.internal.core, cljs-time.internal.core cljs-time.internal.core}, :imports nil, :defs {periodic-seq {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/resources/public/js/compiled/out/cljs_time/periodic.cljs", :line 6, :column 7, :end-line 6, :end-column 19, :arglists (quote ([start period-like] [start end period-like])), :doc "Returns a sequence of date-time values growing over specific period.\n  The 2 argument function takes as input the starting value and the growing value,\n  returning a lazy infinite sequence.\n  The 3 argument function takes as input the starting value, the upper bound value,\n  and the growing value, return a lazy sequence.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([start period-like] [start end period-like]), :arglists ([start period-like] [start end period-like]), :arglists-meta (nil nil)}}, :name cljs-time.periodic/periodic-seq, :variadic false, :file "resources/public/js/compiled/out/cljs_time/periodic.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([start period-like] [start end period-like]), :arglists ([start period-like] [start end period-like]), :arglists-meta (nil nil)}, :method-params ([start period-like] [start end period-like]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 3, :fn-var true, :arglists ([start period-like] [start end period-like]), :doc "Returns a sequence of date-time values growing over specific period.\n  The 2 argument function takes as input the starting value and the growing value,\n  returning a lazy infinite sequence.\n  The 3 argument function takes as input the starting value, the upper bound value,\n  and the growing value, return a lazy sequence."}}}