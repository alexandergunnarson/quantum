;; Analyzed by ClojureScript 0.0-3269
{:use-macros nil, :excludes #{}, :name quantum.core.data.set, :imports nil, :requires {ns quantum.core.ns, quantum.core.ns quantum.core.ns, set clojure.set, clojure.set clojure.set, avl clojure.data.avl, clojure.data.avl clojure.data.avl}, :uses {Editable quantum.core.ns, Nil quantum.core.ns, Bool quantum.core.ns, IllegalArgumentException quantum.core.ns, Vec quantum.core.ns, Num quantum.core.ns, Regex quantum.core.ns, Key quantum.core.ns, Map quantum.core.ns, ArrList quantum.core.ns, LSeq quantum.core.ns, Set quantum.core.ns, ExactNum quantum.core.ns, Queue quantum.core.ns, TreeMap quantum.core.ns, Exception quantum.core.ns, Decimal quantum.core.ns, Int quantum.core.ns, Transient quantum.core.ns}, :defs {sorted-set+ {:name quantum.core.data.set/sorted-set+, :file "src/cljc/quantum/core/data/set.cljc", :line 32, :column 1, :end-line 32, :end-column 17, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/data/set.cljc", :line 32, :column 6, :end-line 32, :end-column 17}}, union {:name quantum.core.data.set/union, :file "src/cljc/quantum/core/data/set.cljc", :line 27, :column 1, :end-line 27, :end-column 11, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/data/set.cljc", :line 27, :column 6, :end-line 27, :end-column 11}}, proper-superset? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/data/set.cljc", :line 52, :column 6, :end-line 52, :end-column 22}, :name quantum.core.data.set/proper-superset?, :variadic false, :file "src/cljc/quantum/core/data/set.cljc", :end-column 22, :method-params ([p1__23084# p2__23085#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists nil}, intersection {:name quantum.core.data.set/intersection, :file "src/cljc/quantum/core/data/set.cljc", :line 28, :column 1, :end-line 28, :end-column 18, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/data/set.cljc", :line 28, :column 6, :end-line 28, :end-column 18}}, superset? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/data/set.cljc", :line 50, :column 6, :end-line 50, :end-column 15}, :name quantum.core.data.set/superset?, :variadic false, :file "src/cljc/quantum/core/data/set.cljc", :end-column 15, :method-params ([p1__23080# p2__23081#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists nil}, subset? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/data/set.cljc", :line 49, :column 6, :end-line 49, :end-column 13}, :name quantum.core.data.set/subset?, :variadic false, :file "src/cljc/quantum/core/data/set.cljc", :end-column 13, :method-params ([p1__23078# p2__23079#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists nil}, proper-subset? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/data/set.cljc", :line 51, :column 6, :end-line 51, :end-column 20}, :name quantum.core.data.set/proper-subset?, :variadic false, :file "src/cljc/quantum/core/data/set.cljc", :end-column 20, :method-params ([p1__23082# p2__23083#]), :protocol-impl nil, :arglists-meta (), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists nil}, sorted-set-by+ {:name quantum.core.data.set/sorted-set-by+, :file "src/cljc/quantum/core/data/set.cljc", :line 33, :column 1, :end-line 33, :end-column 20, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/data/set.cljc", :line 33, :column 6, :end-line 33, :end-column 20}}, xset? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/data/set.cljc", :line 35, :column 7, :end-line 35, :end-column 12, :arglists (quote ([fn-key set1 set2])), :attribution "Alex Gunnarson", :todo ["A cool idea... but improve performance"]}, :name quantum.core.data.set/xset?, :variadic false, :file "src/cljc/quantum/core/data/set.cljc", :end-column 12, :method-params ([fn-key set1 set2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :attribution "Alex Gunnarson", :todo ["A cool idea... but improve performance"], :end-line 35, :max-fixed-arity 3, :fn-var true, :arglists (quote ([fn-key set1 set2]))}, difference {:name quantum.core.data.set/difference, :file "src/cljc/quantum/core/data/set.cljc", :line 29, :column 1, :end-line 29, :end-column 16, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/data/set.cljc", :line 29, :column 6, :end-line 29, :end-column 16}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:fn :eq :sub :super :proper-super :proper-sub}, :order [:eq :fn :sub :super :proper-sub :proper-super]}, :doc "Useful set-related functions. Includes a dispatch function, |xset?|, \n          from which |subset|, |superset|, |proper-subset?|, and so on may be called."}