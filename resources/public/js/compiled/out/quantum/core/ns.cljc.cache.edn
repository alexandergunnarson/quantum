;; Analyzed by ClojureScript 0.0-3269
{:use-macros nil, :excludes #{}, :name quantum.core.ns, :imports nil, :requires {clojure.core.rrb-vector clojure.core.rrb-vector, cljs.core cljs.core}, :uses {Keyword cljs.core}, :defs {map->Queue {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 284, :column 12, :end-line 284, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__19303]))}, :name quantum.core.ns/map->Queue, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 17, :method-params ([G__19303]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 284, :end-line 284, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19303]))}, AMap {:name quantum.core.ns/AMap, :file "src/cljc/quantum/core/ns.cljc", :line 262, :column 1, :end-line 262, :end-column 16, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 262, :column 12, :end-line 262, :end-column 16}}, map->Map {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 285, :column 12, :end-line 285, :end-column 15, :internal-ctor true, :factory :map, :arglists (quote ([G__19311]))}, :name quantum.core.ns/map->Map, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :method-params ([G__19311]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 285, :end-line 285, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19311]))}, map->LSeq {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 279, :column 12, :end-line 279, :end-column 16, :internal-ctor true, :factory :map, :arglists (quote ([G__19263]))}, :name quantum.core.ns/map->LSeq, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 16, :method-params ([G__19263]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 279, :end-line 279, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19263]))}, map->Set {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 274, :column 12, :end-line 274, :end-column 15, :internal-ctor true, :factory :map, :arglists (quote ([G__19231]))}, :name quantum.core.ns/map->Set, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :method-params ([G__19231]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 274, :end-line 274, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19231]))}, ->Bool {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 276, :column 12, :end-line 276, :end-column 16, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->Bool, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 276, :end-line 276, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, Editable {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/Editable, :file "src/cljc/quantum/core/ns.cljc", :end-column 20, :type true, :column 12, :internal-ctor true, :line 282, :record true, :end-line 282, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, AMEntry {:name quantum.core.ns/AMEntry, :file "src/cljc/quantum/core/ns.cljc", :line 257, :column 1, :end-line 257, :end-column 19, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 257, :column 12, :end-line 257, :end-column 19}}, ->Seq {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 286, :column 12, :end-line 286, :end-column 15, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->Seq, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 286, :end-line 286, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, map->Key {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 269, :column 12, :end-line 269, :end-column 15, :internal-ctor true, :factory :map, :arglists (quote ([G__19191]))}, :name quantum.core.ns/map->Key, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :method-params ([G__19191]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 269, :end-line 269, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19191]))}, ->Decimal {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 273, :column 12, :end-line 273, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->Decimal, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 273, :end-line 273, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, AArrList {:name quantum.core.ns/AArrList, :file "src/cljc/quantum/core/ns.cljc", :line 253, :column 1, :end-line 253, :end-column 20, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 253, :column 12, :end-line 253, :end-column 20}}, map->Nil {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 268, :column 12, :end-line 268, :end-column 15, :internal-ctor true, :factory :map, :arglists (quote ([G__19183]))}, :name quantum.core.ns/map->Nil, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :method-params ([G__19183]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 268, :end-line 268, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19183]))}, ->Map {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 285, :column 12, :end-line 285, :end-column 15, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->Map, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 285, :end-line 285, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, Nil {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/Nil, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :type true, :column 12, :internal-ctor true, :line 268, :record true, :end-line 268, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->IllegalArgumentException {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 291, :column 21, :end-line 291, :end-column 45, :internal-ctor true, :factory :map, :arglists (quote ([G__19351]))}, :name quantum.core.ns/map->IllegalArgumentException, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 45, :method-params ([G__19351]), :protocol-impl nil, :arglists-meta (nil nil), :column 10, :internal-ctor true, :factory :map, :line 291, :end-line 291, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19351]))}, Bool {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/Bool, :file "src/cljc/quantum/core/ns.cljc", :end-column 16, :type true, :column 12, :internal-ctor true, :line 276, :record true, :end-line 276, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, JSObj {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/JSObj, :file "src/cljc/quantum/core/ns.cljc", :end-column 26, :type true, :column 21, :internal-ctor true, :line 289, :record true, :end-line 289, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Nil {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 268, :column 12, :end-line 268, :end-column 15, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->Nil, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 268, :end-line 268, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ->LSeq {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 279, :column 12, :end-line 279, :end-column 16, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->LSeq, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 279, :end-line 279, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ABool {:name quantum.core.ns/ABool, :file "src/cljc/quantum/core/ns.cljc", :line 252, :column 1, :end-line 252, :end-column 17, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 252, :column 12, :end-line 252, :end-column 17}}, ATreeMap {:name quantum.core.ns/ATreeMap, :file "src/cljc/quantum/core/ns.cljc", :line 254, :column 1, :end-line 254, :end-column 20, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 254, :column 12, :end-line 254, :end-column 20}}, ->JSObj {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 289, :column 21, :end-line 289, :end-column 26, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->JSObj, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 10, :internal-ctor true, :factory :positional, :line 289, :end-line 289, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, Record {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/Record, :file "src/cljc/quantum/core/ns.cljc", :end-column 18, :type true, :column 12, :internal-ctor true, :line 287, :record true, :end-line 287, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Num {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 270, :column 12, :end-line 270, :end-column 15, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->Num, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 270, :end-line 270, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, map->Record {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 287, :column 12, :end-line 287, :end-column 18, :internal-ctor true, :factory :map, :arglists (quote ([G__19327]))}, :name quantum.core.ns/map->Record, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 18, :method-params ([G__19327]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 287, :end-line 287, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19327]))}, map->JSObj {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 289, :column 21, :end-line 289, :end-column 26, :internal-ctor true, :factory :map, :arglists (quote ([G__19335]))}, :name quantum.core.ns/map->JSObj, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 26, :method-params ([G__19335]), :protocol-impl nil, :arglists-meta (nil nil), :column 10, :internal-ctor true, :factory :map, :line 289, :end-line 289, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19335]))}, ->Exception {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 290, :column 21, :end-line 290, :end-column 30, :internal-ctor true, :factory :positional, :arglists (quote ([msg]))}, :name quantum.core.ns/->Exception, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 30, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 10, :internal-ctor true, :factory :positional, :line 290, :end-line 290, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, ->ArrList {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 277, :column 12, :end-line 277, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->ArrList, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 277, :end-line 277, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, IllegalArgumentException {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/IllegalArgumentException, :file "src/cljc/quantum/core/ns.cljc", :end-column 45, :type true, :column 21, :internal-ctor true, :line 291, :record true, :end-line 291, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Editable {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 282, :column 12, :end-line 282, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->Editable, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 282, :end-line 282, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, map->Seq {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 286, :column 12, :end-line 286, :end-column 15, :internal-ctor true, :factory :map, :arglists (quote ([G__19319]))}, :name quantum.core.ns/map->Seq, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :method-params ([G__19319]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 286, :end-line 286, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19319]))}, ASet {:name quantum.core.ns/ASet, :file "src/cljc/quantum/core/ns.cljc", :line 251, :column 1, :end-line 251, :end-column 16, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 251, :column 12, :end-line 251, :end-column 16}}, map->Editable {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 282, :column 12, :end-line 282, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__19287]))}, :name quantum.core.ns/map->Editable, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 20, :method-params ([G__19287]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 282, :end-line 282, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19287]))}, Vec {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/Vec, :file "src/cljc/quantum/core/ns.cljc", :end-column 24, :type true, :column 21, :internal-ctor true, :line 280, :record true, :end-line 280, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ALSeq {:name quantum.core.ns/ALSeq, :file "src/cljc/quantum/core/ns.cljc", :line 255, :column 1, :end-line 255, :end-column 17, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 255, :column 12, :end-line 255, :end-column 17}}, ->Key {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 269, :column 12, :end-line 269, :end-column 15, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->Key, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 269, :end-line 269, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, Num {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/Num, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :type true, :column 12, :internal-ctor true, :line 270, :record true, :end-line 270, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->TreeMap {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 278, :column 12, :end-line 278, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->TreeMap, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 278, :end-line 278, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ARegex {:name quantum.core.ns/ARegex, :file "src/cljc/quantum/core/ns.cljc", :line 258, :column 1, :end-line 258, :end-column 18, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 258, :column 12, :end-line 258, :end-column 18}}, Regex {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/Regex, :file "src/cljc/quantum/core/ns.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 281, :record true, :end-line 281, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->Transient {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 283, :column 12, :end-line 283, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__19295]))}, :name quantum.core.ns/map->Transient, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 21, :method-params ([G__19295]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 283, :end-line 283, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19295]))}, ->Transient {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 283, :column 12, :end-line 283, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->Transient, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 283, :end-line 283, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, AExactNum {:name quantum.core.ns/AExactNum, :file "src/cljc/quantum/core/ns.cljc", :line 247, :column 1, :end-line 247, :end-column 21, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 247, :column 12, :end-line 247, :end-column 21}}, ->Regex {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 281, :column 12, :end-line 281, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->Regex, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 281, :end-line 281, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, Key {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/Key, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :type true, :column 12, :internal-ctor true, :line 269, :record true, :end-line 269, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->Regex {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 281, :column 12, :end-line 281, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__19279]))}, :name quantum.core.ns/map->Regex, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 17, :method-params ([G__19279]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 281, :end-line 281, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19279]))}, AEditable {:name quantum.core.ns/AEditable, :file "src/cljc/quantum/core/ns.cljc", :line 259, :column 1, :end-line 259, :end-column 21, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 259, :column 12, :end-line 259, :end-column 21}}, map->TreeMap {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 278, :column 12, :end-line 278, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__19255]))}, :name quantum.core.ns/map->TreeMap, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 19, :method-params ([G__19255]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 278, :end-line 278, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19255]))}, Map {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/Map, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :type true, :column 12, :internal-ctor true, :line 285, :record true, :end-line 285, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ArrList {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/ArrList, :file "src/cljc/quantum/core/ns.cljc", :end-column 19, :type true, :column 12, :internal-ctor true, :line 277, :record true, :end-line 277, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, AKey {:name quantum.core.ns/AKey, :file "src/cljc/quantum/core/ns.cljc", :line 245, :column 1, :end-line 245, :end-column 16, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 245, :column 12, :end-line 245, :end-column 16}}, LSeq {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/LSeq, :file "src/cljc/quantum/core/ns.cljc", :end-column 16, :type true, :column 12, :internal-ctor true, :line 279, :record true, :end-line 279, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, Set {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/Set, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :type true, :column 12, :internal-ctor true, :line 274, :record true, :end-line 274, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->Bool {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 276, :column 12, :end-line 276, :end-column 16, :internal-ctor true, :factory :map, :arglists (quote ([G__19239]))}, :name quantum.core.ns/map->Bool, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 16, :method-params ([G__19239]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 276, :end-line 276, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19239]))}, map->Decimal {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 273, :column 12, :end-line 273, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__19223]))}, :name quantum.core.ns/map->Decimal, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 19, :method-params ([G__19223]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 273, :end-line 273, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19223]))}, ExactNum {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/ExactNum, :file "src/cljc/quantum/core/ns.cljc", :end-column 20, :type true, :column 12, :internal-ctor true, :line 271, :record true, :end-line 271, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Record {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 287, :column 12, :end-line 287, :end-column 18, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->Record, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 287, :end-line 287, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ->Vec {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 280, :column 21, :end-line 280, :end-column 24, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->Vec, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 10, :internal-ctor true, :factory :positional, :line 280, :end-line 280, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, map->Int {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 272, :column 12, :end-line 272, :end-column 15, :internal-ctor true, :factory :map, :arglists (quote ([G__19215]))}, :name quantum.core.ns/map->Int, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :method-params ([G__19215]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 272, :end-line 272, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19215]))}, ->Set {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 274, :column 12, :end-line 274, :end-column 15, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->Set, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 274, :end-line 274, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, Seq {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/Seq, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :type true, :column 12, :internal-ctor true, :line 286, :record true, :end-line 286, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->ExactNum {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 271, :column 12, :end-line 271, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__19207]))}, :name quantum.core.ns/map->ExactNum, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 20, :method-params ([G__19207]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 271, :end-line 271, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19207]))}, AQueue {:name quantum.core.ns/AQueue, :file "src/cljc/quantum/core/ns.cljc", :line 261, :column 1, :end-line 261, :end-column 18, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 261, :column 12, :end-line 261, :end-column 18}}, AError {:name quantum.core.ns/AError, :file "src/cljc/quantum/core/ns.cljc", :line 264, :column 1, :end-line 264, :end-column 18, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 264, :column 12, :end-line 264, :end-column 18}}, Queue {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/Queue, :file "src/cljc/quantum/core/ns.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 284, :record true, :end-line 284, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ADouble {:name quantum.core.ns/ADouble, :file "src/cljc/quantum/core/ns.cljc", :line 249, :column 1, :end-line 249, :end-column 19, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 249, :column 12, :end-line 249, :end-column 19}}, TreeMap {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/TreeMap, :file "src/cljc/quantum/core/ns.cljc", :end-column 19, :type true, :column 12, :internal-ctor true, :line 278, :record true, :end-line 278, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->ArrList {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 277, :column 12, :end-line 277, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__19247]))}, :name quantum.core.ns/map->ArrList, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 19, :method-params ([G__19247]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 277, :end-line 277, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19247]))}, ->IllegalArgumentException {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 291, :column 21, :end-line 291, :end-column 45, :internal-ctor true, :factory :positional, :arglists (quote ([msg]))}, :name quantum.core.ns/->IllegalArgumentException, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 45, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 10, :internal-ctor true, :factory :positional, :line 291, :end-line 291, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, AVec {:name quantum.core.ns/AVec, :file "src/cljc/quantum/core/ns.cljc", :line 256, :column 1, :end-line 256, :end-column 16, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 256, :column 12, :end-line 256, :end-column 16}}, map->Exception {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 290, :column 21, :end-line 290, :end-column 30, :internal-ctor true, :factory :map, :arglists (quote ([G__19343]))}, :name quantum.core.ns/map->Exception, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 30, :method-params ([G__19343]), :protocol-impl nil, :arglists-meta (nil nil), :column 10, :internal-ctor true, :factory :map, :line 290, :end-line 290, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19343]))}, map->Vec {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 280, :column 21, :end-line 280, :end-column 24, :internal-ctor true, :factory :map, :arglists (quote ([G__19271]))}, :name quantum.core.ns/map->Vec, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 24, :method-params ([G__19271]), :protocol-impl nil, :arglists-meta (nil nil), :column 10, :internal-ctor true, :factory :map, :line 280, :end-line 280, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19271]))}, ADecimal {:name quantum.core.ns/ADecimal, :file "src/cljc/quantum/core/ns.cljc", :line 250, :column 1, :end-line 250, :end-column 20, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 250, :column 12, :end-line 250, :end-column 20}}, ->Queue {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 284, :column 12, :end-line 284, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->Queue, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 284, :end-line 284, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, Exception {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/Exception, :file "src/cljc/quantum/core/ns.cljc", :end-column 30, :type true, :column 21, :internal-ctor true, :line 290, :record true, :end-line 290, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, Decimal {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/Decimal, :file "src/cljc/quantum/core/ns.cljc", :end-column 19, :type true, :column 12, :internal-ctor true, :line 273, :record true, :end-line 273, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, AInt {:name quantum.core.ns/AInt, :file "src/cljc/quantum/core/ns.cljc", :line 248, :column 1, :end-line 248, :end-column 16, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 248, :column 12, :end-line 248, :end-column 16}}, ->ExactNum {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 271, :column 12, :end-line 271, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->ExactNum, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 271, :end-line 271, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ATransient {:name quantum.core.ns/ATransient, :file "src/cljc/quantum/core/ns.cljc", :line 260, :column 1, :end-line 260, :end-column 22, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 260, :column 12, :end-line 260, :end-column 22}}, ->Int {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 272, :column 12, :end-line 272, :end-column 15, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name quantum.core.ns/->Int, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 272, :end-line 272, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, Int {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/Int, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :type true, :column 12, :internal-ctor true, :line 272, :record true, :end-line 272, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, Transient {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.ns/Transient, :file "src/cljc/quantum/core/ns.cljc", :end-column 21, :type true, :column 12, :internal-ctor true, :line 283, :record true, :end-line 283, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->Num {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 270, :column 12, :end-line 270, :end-column 15, :internal-ctor true, :factory :map, :arglists (quote ([G__19199]))}, :name quantum.core.ns/map->Num, :variadic false, :file "src/cljc/quantum/core/ns.cljc", :end-column 15, :method-params ([G__19199]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 270, :end-line 270, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__19199]))}, ANum {:name quantum.core.ns/ANum, :file "src/cljc/quantum/core/ns.cljc", :line 246, :column 1, :end-line 246, :end-column 16, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 246, :column 12, :end-line 246, :end-column 16}}, ANil {:name quantum.core.ns/ANil, :file "src/cljc/quantum/core/ns.cljc", :line 243, :column 1, :end-line 243, :end-column 16, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/ns.cljc", :line 243, :column 12, :end-line 243, :end-column 16}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:msg}, :order [:msg]}, :doc "Useful namespace and var-related functions.\n    \n          Also provides convenience functions for importing |quantum| namespaces.\n          These convenience functions are untested with ClojureScript."}