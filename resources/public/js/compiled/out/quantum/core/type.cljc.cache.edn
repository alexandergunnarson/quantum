;; Analyzed by ClojureScript 0.0-3269
{:use-macros {whenf*n quantum.core.logic, ifn quantum.core.logic, whencf*n quantum.core.logic, <- quantum.core.function, whenc quantum.core.logic, if*n quantum.core.logic, condf*n quantum.core.logic, fn-> quantum.core.function, whenf quantum.core.logic, condf quantum.core.logic, fn->> quantum.core.function}, :excludes #{}, :name quantum.core.type, :imports nil, :requires {ns quantum.core.ns, quantum.core.ns quantum.core.ns, log quantum.core.logic, quantum.core.logic quantum.core.logic, fn quantum.core.function, quantum.core.function quantum.core.function}, :uses {AMap quantum.core.ns, Editable quantum.core.ns, AArrList quantum.core.ns, Nil quantum.core.ns, Bool quantum.core.ns, ABool quantum.core.ns, f*n quantum.core.function, ATreeMap quantum.core.ns, IllegalArgumentException quantum.core.ns, fn-not quantum.core.logic, ASet quantum.core.ns, Vec quantum.core.ns, ALSeq quantum.core.ns, Num quantum.core.ns, ARegex quantum.core.ns, Regex quantum.core.ns, AExactNum quantum.core.ns, Key quantum.core.ns, AEditable quantum.core.ns, Map quantum.core.ns, ArrList quantum.core.ns, AKey quantum.core.ns, LSeq quantum.core.ns, fn-or quantum.core.logic, Set quantum.core.ns, splice-or quantum.core.logic, ExactNum quantum.core.ns, fn-and quantum.core.logic, fn* quantum.core.function, compr quantum.core.function, AQueue quantum.core.ns, AError quantum.core.ns, Queue quantum.core.ns, ADouble quantum.core.ns, TreeMap quantum.core.ns, AVec quantum.core.ns, ADecimal quantum.core.ns, Exception quantum.core.ns, Decimal quantum.core.ns, AInt quantum.core.ns, ATransient quantum.core.ns, Int quantum.core.ns, Transient quantum.core.ns, ANum quantum.core.ns, ANil quantum.core.ns, unary quantum.core.function}, :defs {error? {:name quantum.core.type/error?, :file "src/cljc/quantum/core/type.cljc", :line 80, :column 9, :end-line 80, :end-column 20, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 80, :column 14, :end-line 80, :end-column 20}}, boolean? {:name quantum.core.type/boolean?, :file "src/cljc/quantum/core/type.cljc", :line 56, :column 9, :end-line 56, :end-column 22, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 56, :column 14, :end-line 56, :end-column 22}}, sorted-map? {:name quantum.core.type/sorted-map?, :file "src/cljc/quantum/core/type.cljc", :line 71, :column 9, :end-line 71, :end-column 25, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 71, :column 14, :end-line 71, :end-column 25}}, double? {:name quantum.core.type/double?, :file "src/cljc/quantum/core/type.cljc", :line 52, :column 9, :end-line 52, :end-column 21, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 52, :column 14, :end-line 52, :end-column 21}}, map-entry? {:name quantum.core.type/map-entry?, :file "src/cljc/quantum/core/type.cljc", :line 69, :column 9, :end-line 69, :end-column 24, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 69, :column 14, :end-line 69, :end-column 24}}, transient? {:name quantum.core.type/transient?, :file "src/cljc/quantum/core/type.cljc", :line 78, :column 9, :end-line 78, :end-column 24, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 78, :column 14, :end-line 78, :end-column 24}}, regex? {:name quantum.core.type/regex?, :file "src/cljc/quantum/core/type.cljc", :line 76, :column 9, :end-line 76, :end-column 20, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 76, :column 14, :end-line 76, :end-column 20}}, pattern? {:name quantum.core.type/pattern?, :file "src/cljc/quantum/core/type.cljc", :line 75, :column 9, :end-line 75, :end-column 22, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 75, :column 14, :end-line 75, :end-column 22}}, name-from-class {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 83, :column 7, :end-line 83, :end-column 22, :arglists (quote ([class-0]))}, :name quantum.core.type/name-from-class, :variadic false, :file "src/cljc/quantum/core/type.cljc", :end-column 22, :method-params ([class-0]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([class-0]))}, array-list? {:name quantum.core.type/array-list?, :file "src/cljc/quantum/core/type.cljc", :line 66, :column 9, :end-line 66, :end-column 25, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 66, :column 14, :end-line 66, :end-column 25}}, coll+? {:name quantum.core.type/coll+?, :file "src/cljc/quantum/core/type.cljc", :line 74, :column 9, :end-line 74, :end-column 20, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 74, :column 14, :end-line 74, :end-column 20}}, editable? {:name quantum.core.type/editable?, :file "src/cljc/quantum/core/type.cljc", :line 77, :column 9, :end-line 77, :end-column 23, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 77, :column 14, :end-line 77, :end-column 23}}, instance+? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 42, :column 12, :end-line 42, :end-column 22, :arglists (quote ([class-0 obj]))}, :name quantum.core.type/instance+?, :variadic false, :file "src/cljc/quantum/core/type.cljc", :end-column 22, :method-params ([class-0 obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 6, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([class-0 obj]))}, queue? {:name quantum.core.type/queue?, :file "src/cljc/quantum/core/type.cljc", :line 72, :column 9, :end-line 72, :end-column 20, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 72, :column 14, :end-line 72, :end-column 20}}, types {:name quantum.core.type/types, :file "src/cljc/quantum/core/type.cljc", :line 103, :column 1, :end-line 103, :end-column 11, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 103, :column 6, :end-line 103, :end-column 11}}, class {:name quantum.core.type/class, :file "src/cljc/quantum/core/type.cljc", :line 38, :column 10, :end-line 38, :end-column 20, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 38, :column 15, :end-line 38, :end-column 20}}, lseq? {:name quantum.core.type/lseq?, :file "src/cljc/quantum/core/type.cljc", :line 73, :column 9, :end-line 73, :end-column 19, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 73, :column 14, :end-line 73, :end-column 19}}, transient-threshold {:name quantum.core.type/transient-threshold, :file "src/cljc/quantum/core/type.cljc", :line 94, :column 1, :end-line 94, :end-column 25, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/type.cljc", :line 94, :column 6, :end-line 94, :end-column 25}}}, :require-macros {log quantum.core.logic, quantum.core.logic quantum.core.logic, fn quantum.core.function, quantum.core.function quantum.core.function}, :cljs.analyzer/constants {:seen #{:vec :else :iseq :set :map}, :order [:else :map :set :vec :iseq]}, :doc "Type-checking predicates, 'transientization' checks, class aliases, etc."}