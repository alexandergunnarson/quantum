;; Analyzed by ClojureScript 0.0-3269
{:use-macros {whenf*n quantum.core.logic, ifn quantum.core.logic, whencf*n quantum.core.logic, whenc quantum.core.logic, if*n quantum.core.logic, condf*n quantum.core.logic, whenf quantum.core.logic, condf quantum.core.logic}, :excludes #{}, :name quantum.core.numeric, :imports nil, :requires {ns quantum.core.ns, quantum.core.ns quantum.core.ns, log quantum.core.logic, quantum.core.logic quantum.core.logic, type quantum.core.type, quantum.core.type quantum.core.type}, :uses {Editable quantum.core.ns, boolean? quantum.core.type, sorted-map? quantum.core.type, Nil quantum.core.ns, Bool quantum.core.ns, IllegalArgumentException quantum.core.ns, fn-not quantum.core.logic, Vec quantum.core.ns, Num quantum.core.ns, double? quantum.core.type, map-entry? quantum.core.type, Regex quantum.core.ns, transient? quantum.core.type, regex? quantum.core.type, Key quantum.core.ns, pattern? quantum.core.type, Map quantum.core.ns, ArrList quantum.core.ns, array-list? quantum.core.type, LSeq quantum.core.ns, fn-or quantum.core.logic, coll+? quantum.core.type, Set quantum.core.ns, splice-or quantum.core.logic, editable? quantum.core.type, ExactNum quantum.core.ns, instance+? quantum.core.type, fn-and quantum.core.logic, queue? quantum.core.type, Queue quantum.core.ns, TreeMap quantum.core.ns, Exception quantum.core.ns, Decimal quantum.core.ns, Int quantum.core.ns, lseq? quantum.core.type, Transient quantum.core.ns}, :defs {nneg-int? {:name quantum.core.numeric/nneg-int?, :file "src/cljc/quantum/core/numeric.cljc", :line 35, :column 1, :end-line 35, :end-column 16, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 35, :column 7, :end-line 35, :end-column 16}}, rcompare {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 110, :column 7, :end-line 110, :end-column 15, :arglists (quote ([x y])), :doc "Reverse comparator."}, :name quantum.core.numeric/rcompare, :variadic false, :file "src/cljc/quantum/core/numeric.cljc", :end-column 15, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :doc "Reverse comparator."}, greatest-or {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 127, :column 7, :end-line 127, :end-column 18, :arglists (quote ([a b else]))}, :name quantum.core.numeric/greatest-or, :variadic false, :file "src/cljc/quantum/core/numeric.cljc", :end-column 18, :method-params ([a b else]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b else]))}, greatest {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 115, :column 7, :end-line 115, :end-column 15, :arglists (quote ([coll & [?comparator]])), :doc "Returns the 'greatest' element in coll in O(n) time.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}}, :name quantum.core.numeric/greatest, :variadic true, :file "src/cljc/quantum/core/numeric.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}, :method-params [(coll [?comparator])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists ([coll & [?comparator]]), :doc "Returns the 'greatest' element in coll in O(n) time."}, floor {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 45, :column 7, :end-line 45, :end-column 12, :arglists (quote ([x]))}, :name quantum.core.numeric/floor, :variadic false, :file "src/cljc/quantum/core/numeric.cljc", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nneg? {:name quantum.core.numeric/nneg?, :file "src/cljc/quantum/core/numeric.cljc", :line 33, :column 1, :end-line 33, :end-column 12, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 33, :column 7, :end-line 33, :end-column 12}}, int+ {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 162, :column 4, :end-line 162, :end-column 8, :protocol quantum.core.numeric/ToInt, :doc "A simple function to coerce numbers, and strings, etc; to an int.\n   Note: nil input returns nil.", :arglists (quote ([i]))}, :protocol quantum.core.numeric/ToInt, :name quantum.core.numeric/int+, :variadic false, :file "src/cljc/quantum/core/numeric.cljc", :end-column 8, :method-params ([i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 162, :max-fixed-arity 1, :fn-var true, :arglists (quote ([i])), :doc "A simple function to coerce numbers, and strings, etc; to an int.\n   Note: nil input returns nil."}, neg {:name quantum.core.numeric/neg, :file "src/cljc/quantum/core/numeric.cljc", :line 36, :column 1, :end-line 36, :end-column 10, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 36, :column 7, :end-line 36, :end-column 10}}, ceil {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 49, :column 7, :end-line 49, :end-column 11, :arglists (quote ([x]))}, :name quantum.core.numeric/ceil, :variadic false, :file "src/cljc/quantum/core/numeric.cljc", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, sign {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 32, :column 7, :end-line 32, :end-column 11, :arglists (quote ([n]))}, :name quantum.core.numeric/sign, :variadic false, :file "src/cljc/quantum/core/numeric.cljc", :end-column 11, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, safediv {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 81, :column 7, :end-line 81, :end-column 14, :arglists (quote ([a b] [a b c] [a b c & args])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([a b] [a b c]), :arglists ([a b] [a b c] [a b c & args]), :arglists-meta (nil nil nil)}}, :name quantum.core.numeric/safediv, :variadic true, :file "src/cljc/quantum/core/numeric.cljc", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([a b] [a b c]), :arglists ([a b] [a b c] [a b c & args]), :arglists-meta (nil nil nil)}, :method-params ([a b] [a b c]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 3, :fn-var true, :arglists ([a b] [a b c] [a b c & args])}, safe* {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 63, :column 7, :end-line 63, :end-column 12, :arglists (quote ([a] [a b] [a b c] [a b c & args])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([a] [a b] [a b c]), :arglists ([a] [a b] [a b c] [a b c & args]), :arglists-meta (nil nil nil nil)}}, :name quantum.core.numeric/safe*, :variadic true, :file "src/cljc/quantum/core/numeric.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([a] [a b] [a b c]), :arglists ([a] [a b] [a b c] [a b c & args]), :arglists-meta (nil nil nil nil)}, :method-params ([a] [a b] [a b c]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 3, :fn-var true, :arglists ([a] [a b] [a b c] [a b c & args])}, long+ {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 184, :column 4, :end-line 184, :end-column 9, :protocol quantum.core.numeric/ToLong, :doc "A simple function to coerce numbers, and strings, etc; to a long.\n   Note: nil input returns nil.", :arglists (quote ([i]))}, :protocol quantum.core.numeric/ToLong, :name quantum.core.numeric/long+, :variadic false, :file "src/cljc/quantum/core/numeric.cljc", :end-column 9, :method-params ([i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 184, :max-fixed-arity 1, :fn-var true, :arglists (quote ([i])), :doc "A simple function to coerce numbers, and strings, etc; to a long.\n   Note: nil input returns nil."}, int-nil {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 38, :column 7, :end-line 38, :end-column 14}, :name quantum.core.numeric/int-nil, :variadic false, :file "src/cljc/quantum/core/numeric.cljc", :end-column 14, :method-params ([arg__22915__auto__]), :protocol-impl nil, :arglists-meta (), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists nil}, safe- {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 72, :column 7, :end-line 72, :end-column 12, :arglists (quote ([a] [a b] [a b c] [a b c & args])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([a] [a b] [a b c]), :arglists ([a] [a b] [a b c] [a b c & args]), :arglists-meta (nil nil nil nil)}}, :name quantum.core.numeric/safe-, :variadic true, :file "src/cljc/quantum/core/numeric.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([a] [a b] [a b c]), :arglists ([a] [a b] [a b c] [a b c & args]), :arglists-meta (nil nil nil nil)}, :method-params ([a] [a b] [a b c]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 3, :fn-var true, :arglists ([a] [a b] [a b c] [a b c & args])}, approx? {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 135, :column 7, :end-line 135, :end-column 14, :arglists (quote ([tolerance a b]))}, :name quantum.core.numeric/approx?, :variadic false, :file "src/cljc/quantum/core/numeric.cljc", :end-column 14, :method-params ([tolerance a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tolerance a b]))}, least-or {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 131, :column 7, :end-line 131, :end-column 15, :arglists (quote ([a b else]))}, :name quantum.core.numeric/least-or, :variadic false, :file "src/cljc/quantum/core/numeric.cljc", :end-column 15, :method-params ([a b else]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b else]))}, ToLong {:meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 183, :column 14, :end-line 183, :end-column 20, :doc nil, :protocol-symbol true, :protocol-info {:methods {long+ [[i]]}}}, :protocol-symbol true, :name quantum.core.numeric/ToLong, :file "src/cljc/quantum/core/numeric.cljc", :end-column 20, :column 1, :line 183, :protocol-info {:methods {long+ [[i]]}}, :info nil, :end-line 183, :impls #{nil number string}, :doc nil}, least {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 121, :column 7, :end-line 121, :end-column 12, :arglists (quote ([coll & [?comparator]])), :doc "Returns the 'least' element in coll in O(n) time.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}}, :name quantum.core.numeric/least, :variadic true, :file "src/cljc/quantum/core/numeric.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}, :method-params [(coll [?comparator])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists ([coll & [?comparator]]), :doc "Returns the 'least' element in coll in O(n) time."}, pos-int? {:name quantum.core.numeric/pos-int?, :file "src/cljc/quantum/core/numeric.cljc", :line 34, :column 1, :end-line 34, :end-column 15, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 34, :column 7, :end-line 34, :end-column 15}}, abs {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 37, :column 7, :end-line 37, :end-column 10}, :name quantum.core.numeric/abs, :variadic false, :file "src/cljc/quantum/core/numeric.cljc", :end-column 10, :method-params ([arg__22915__auto__]), :protocol-impl nil, :arglists-meta (), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists nil}, ToInt {:meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 161, :column 14, :end-line 161, :end-column 19, :doc nil, :protocol-symbol true, :protocol-info {:methods {int+ [[i]]}}}, :protocol-symbol true, :name quantum.core.numeric/ToInt, :file "src/cljc/quantum/core/numeric.cljc", :end-column 19, :column 1, :line 161, :protocol-info {:methods {int+ [[i]]}}, :info nil, :end-line 161, :impls #{nil number string}, :doc nil}, safe+ {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 54, :column 7, :end-line 54, :end-column 12, :arglists (quote ([a] [a b] [a b c] [a b c & args])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([a] [a b] [a b c]), :arglists ([a] [a b] [a b c] [a b c & args]), :arglists-meta (nil nil nil nil)}}, :name quantum.core.numeric/safe+, :variadic true, :file "src/cljc/quantum/core/numeric.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([a] [a b] [a b c]), :arglists ([a] [a b] [a b c] [a b c & args]), :arglists-meta (nil nil nil nil)}, :method-params ([a] [a b] [a b c]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 3, :fn-var true, :arglists ([a] [a b] [a b c] [a b c & args])}, sin {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/numeric.cljc", :line 138, :column 7, :end-line 138, :end-column 10, :arglists (quote ([n]))}, :name quantum.core.numeric/sin, :variadic false, :file "src/cljc/quantum/core/numeric.cljc", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}}, :require-macros {log quantum.core.logic, quantum.core.logic quantum.core.logic}, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc "Useful numeric functions. Floor, ceil, round, sin, abs, neg, etc."}