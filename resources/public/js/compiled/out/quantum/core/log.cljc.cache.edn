;; Analyzed by ClojureScript 0.0-3269
{:use-macros nil, :excludes #{pr}, :name quantum.core.log, :imports nil, :requires {ns quantum.core.ns, quantum.core.ns quantum.core.ns, time quantum.core.time.core, quantum.core.time.core quantum.core.time.core, str quantum.core.string, quantum.core.string quantum.core.string, async cljs.core.async, cljs.core.async cljs.core.async}, :uses {Editable quantum.core.ns, <! cljs.core.async, close! cljs.core.async, Nil quantum.core.ns, Bool quantum.core.ns, chan cljs.core.async, IllegalArgumentException quantum.core.ns, Vec quantum.core.ns, Num quantum.core.ns, Regex quantum.core.ns, Key quantum.core.ns, Map quantum.core.ns, ArrList quantum.core.ns, LSeq quantum.core.ns, Set quantum.core.ns, ExactNum quantum.core.ns, Queue quantum.core.ns, TreeMap quantum.core.ns, >! cljs.core.async, alts! cljs.core.async, Exception quantum.core.ns, Decimal quantum.core.ns, Int quantum.core.ns, Transient quantum.core.ns}, :defs {map->LogEntry {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/log.cljc", :line 47, :column 12, :end-line 47, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__25836]))}, :name quantum.core.log/map->LogEntry, :variadic false, :file "src/cljc/quantum/core/log.cljc", :end-column 20, :method-params ([G__25836]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25836]))}, enable! {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/log.cljc", :line 57, :column 7, :end-line 57, :end-column 14, :arglists (quote ([pr-type] [pr-type & pr-types])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params ([pr-type]), :arglists ([pr-type] [pr-type & pr-types]), :arglists-meta (nil nil)}}, :name quantum.core.log/enable!, :variadic true, :file "src/cljc/quantum/core/log.cljc", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params ([pr-type]), :arglists ([pr-type] [pr-type & pr-types]), :arglists-meta (nil nil)}, :method-params ([pr-type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists ([pr-type] [pr-type & pr-types])}, log {:name quantum.core.log/log, :file "src/cljc/quantum/core/log.cljc", :line 38, :column 1, :end-line 38, :end-column 9, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/log.cljc", :line 38, :column 6, :end-line 38, :end-column 9}}, statuses {:name quantum.core.log/statuses, :file "src/cljc/quantum/core/log.cljc", :line 42, :column 1, :end-line 42, :end-column 14, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/log.cljc", :line 42, :column 6, :end-line 42, :end-column 14}}, vars {:name quantum.core.log/vars, :file "src/cljc/quantum/core/log.cljc", :line 39, :column 1, :end-line 39, :end-column 10, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/log.cljc", :line 39, :column 6, :end-line 39, :end-column 10}}, errors {:name quantum.core.log/errors, :file "src/cljc/quantum/core/log.cljc", :line 43, :column 1, :end-line 43, :end-column 12, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/log.cljc", :line 43, :column 6, :end-line 43, :end-column 12}}, LogEntry {:num-fields 4, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name quantum.core.log/LogEntry, :file "src/cljc/quantum/core/log.cljc", :end-column 20, :type true, :column 12, :internal-ctor true, :line 47, :record true, :end-line 47, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, cache! {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/log.cljc", :line 40, :column 7, :end-line 40, :end-column 13, :arglists (quote ([k v]))}, :name quantum.core.log/cache!, :variadic false, :file "src/cljc/quantum/core/log.cljc", :end-column 13, :method-params ([k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([k v]))}, disable! {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/log.cljc", :line 52, :column 7, :end-line 52, :end-column 15, :arglists (quote ([pr-type] [pr-type & pr-types])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params ([pr-type]), :arglists ([pr-type] [pr-type & pr-types]), :arglists-meta (nil nil)}}, :name quantum.core.log/disable!, :variadic true, :file "src/cljc/quantum/core/log.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params ([pr-type]), :arglists ([pr-type] [pr-type & pr-types]), :arglists-meta (nil nil)}, :method-params ([pr-type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists ([pr-type] [pr-type & pr-types])}, *prs* {:name quantum.core.log/*prs*, :file "src/cljc/quantum/core/log.cljc", :line 37, :column 1, :end-line 37, :end-column 21, :dynamic true, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/log.cljc", :line 37, :column 16, :end-line 37, :end-column 21, :dynamic true}}, ->LogEntry {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/log.cljc", :line 47, :column 12, :end-line 47, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([time-stamp type ns-source message]))}, :name quantum.core.log/->LogEntry, :variadic false, :file "src/cljc/quantum/core/log.cljc", :end-column 20, :method-params ([time-stamp type ns-source message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 47, :end-line 47, :max-fixed-arity 4, :fn-var true, :arglists (quote ([time-stamp type ns-source message]))}, error {:protocol-inline nil, :meta {:file "/Users/alexandergunnarson/Development/Source Code Projects/quantum/src/cljc/quantum/core/log.cljc", :line 44, :column 7, :end-line 44, :end-column 12, :arglists (quote ([throw-context]))}, :name quantum.core.log/error, :variadic false, :file "src/cljc/quantum/core/log.cljc", :end-column 12, :method-params ([throw-context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([throw-context]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:stack-trace :warn :type :ns-source :time-stamp :user :message}, :order [:warn :user :stack-trace :time-stamp :type :ns-source :message]}, :doc "Simple logging capabilities. Keeps a global log, has a status channel,\n          prints only if the level is enabled, etc.\n\n          By no means a full-fledged logging system, but useful nonetheless."}