; Incremental
; 1ST TIER
(require '[quantum.core.data.binary])
(require '[quantum.core.ns])
(require '[quantum.core.data.map])
(require '[quantum.core.data.set])
(require '[quantum.core.data.ftree])
(require '[quantum.core.error])
(require '[quantum.core.function])
(require '[quantum.core.logic])
(require '[quantum.core.numeric])
(require '[quantum.core.type])
(require '[quantum.core.data.vector])
(require '[quantum.core.macros])
; 2ND TIER
(require '[quantum.core.reducers])
(require '[quantum.core.string])
; (require '[])
; (require '[])
; (require '[])
; (require '[])
; 3RD TIER
(require '[quantum.core.collections.core])
; 4TH TIER
(require '[quantum.core.collections])
(require '[quantum.core.data.queue])
(require '[quantum.core.data.bytes])
(require '[quantum.core.data.array])
(require '[quantum.core.data.xml])
(require '[quantum.core.print])
; 5TH TIER
(require '[quantum.core.io])
(require '[quantum.core.io.serialization])
(require '[quantum.core.cryptography])
(require '[quantum.core.java])
(require '[quantum.core.util.sh])
(require '[quantum.core.util.debug])
(require '[quantum.core.nondeterministic])
(require '[quantum.core.thread])
(require '[quantum.core.util.bench])