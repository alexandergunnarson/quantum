(ns quantum.ui.component
  (:require
   [quantum.core.ns          :as ns]
   [quantum.core.data.map    :as map       :refer [map-entry]          ]
   [quantum.core.data.vector :as vec                                   ]
   [quantum.core.function    :as fn        :refer [f*n compr]                ]
   [quantum.core.logic       :as log       :refer [fn-not fn-and fn-or splice-or nnil?]]
   [quantum.core.numeric     :as num       :refer [neg]                ]
   [quantum.core.type        :as type      :refer [instance+?        class]   ]
   [quantum.core.string      :as str                                   ]
   [quantum.core.collections :as coll :refer
     [redv redm into+ reduce+
      rest+ first+ single?
      lasti takeri+ taker-untili+
      split-remove+ ffilter remove+
      last-index-of+ index-of+
      dropl+ dropr+ takel+
      getr+ interpose+ in?
      map+ filter+ lfilter lremove group-by+
      merge+ key+ val+
      merge-keep-left]]
         
   [quantum.ui.css  :as css]
         
   [quantum.ui.form :as form])
                    )  

(def components (atom #{}))

(defn register-component! [var-0]
  (swap! components conj var-0))

(def state (atom {}))

(def ^:dynamic *component-hook*
  (fn [html]
          
    (css/update-css-once! html @state) ; because it's a double reference...
          
    (css/style html)))

(defn throw-args [args]
  (throw (ex-info "Arguments to |defcomponent| must be a vector:" args)))

                      
                                
                                            
                
                                                 
                     
                                                
                                    
                        
                           
                             
                                  
                                                             
                                              
                                            
                                               
                                      
                                    
                                                       
                                              
                                                  
                                               
                                         
                            
                                   
                                                       
                                              
                                                  
                                               
                                       
                                   
                                               
                                              
                                                          
                                               
                                         
                                                                      

;;;;;;;;;;;; This file autogenerated from src/cljx/quantum/ui/component.cljx
