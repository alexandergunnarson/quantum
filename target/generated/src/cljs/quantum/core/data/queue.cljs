(ns quantum.core.data.queue
  (:require
    [quantum.core.ns :as ns :refer
                               
             [Exception IllegalArgumentException
              Nil Bool Num ExactNum Int Decimal Key Vec Set
              ArrList TreeMap LSeq Regex Editable Transient Queue Map]]
    [quantum.core.collections :as coll :refer [into+]]
    [quantum.core.numeric :as num  :refer [int+]]
    [clojure.core.rrb-vector :as vec+]
           [clojure.core.rrb-vector.rrbt])
       
          
                    
                              
                    
                                               
                                                                      
                    )


; QUEUES
; https://github.com/michalmarczyk/jumping-queues

(defn queue
  "Creates an empty persistent queue, or one populated with a collection."
  {:attribution "weavejester.medley"}
  ([]                                          
             cljs.core.PersistentQueue/EMPTY)
  ([coll] (into+ (queue) coll)))

     
                                                    
        
                      
                          
                       

     
                    
                                                       
                                                 
                                     
                                                           
     
                                                           
                            
                            
                   
        
                                                                           
                            
                            
                    
;;;;;;;;;;;; This file autogenerated from src/cljx/quantum/core/data/queue.cljx
